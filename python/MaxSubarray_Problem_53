class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if max(nums)<0:
            return max(nums)
        total = 0
        best = 0
        for i in range(len(nums)):
            if total<=0:
                total = 0
                total = total+nums[i]
            else:
                total = total + nums[i] 
                if nums[i]<0:
                    best = max(total-nums[i],best)
        best = max(total,best)
        
        if ((len(nums)==1)):
            best = nums[0]
        
        return best
            
        
############### best solution: Greedy Algorithm ###############
class Solution:
    def maxSubArray(self, nums: 'List[int]') -> 'int':
        n = len(nums)
        curr_sum = max_sum = nums[0]

        for i in range(1, n):
            curr_sum = max(nums[i], curr_sum + nums[i])
            max_sum = max(max_sum, curr_sum)
            
        return max_sum




