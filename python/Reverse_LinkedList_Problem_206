# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if (not head):
            return head
        else:
            preNode = None
            currentNode = head
            while(currentNode):
                nextNode = currentNode.next
            # swaping nextNode to preNode position, so pointer change the direction
                currentNode.next = preNode
            # moving the flow forward
                preNode = currentNode
                currentNode = nextNode
            
            return preNode
